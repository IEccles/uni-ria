<script src=" https://cdn.jsdelivr.net/npm/sweetalert@2.1.2/dist/sweetalert.min.js "></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tinymce@6.4.1/skins/ui/oxide/content.min.css">
<script src="https://cdn.jsdelivr.net/npm/tinymce@6.4.1/tinymce.min.js"></script>
<script src="/assets/js/base64.js"></script>

<div>
    {{!-- Personal message to the user, encourage them to explore our product range --}}
    <h1 id="greeting" class="font-bold text-3xl"> Have a browse of latest and greatest Gardening Products!</h1>
    <h2 id="" ></h2>


{{!-- Adding in code to allow for a Search and Sort functionality --}}

    <div class="flex flex-col gap-3">
        <div class="flex flex-wrap place-item-center gap-4 bg-rooted-light ml-4 p-2 border border-rooted rounded-md">

            <select class="ml-4 p-2 border border-rooted-secondary bg-rooted-cream rounded-md focus:outline-none focus:ring-2 focus:ring-rooted">
            <option value="default">Sort by</option>
            {{!-- Make sure to view this as a drop down value --}}
            <option value="name bg-white">Name</option>
            <option value="category bg-white">Category</option>
            <option value="price bg-white">Price</option>
            </select>
        </div>

       <div class="relative grow order-[-1] w-96 md:w-auto md:order-none">
        <label for="search-inventory" class="sr-only"> Search </label>

        <span class="absolute inset-y-0 start-0 grid w-96 place-content-center pointer-events-none">
            <button type="button" class="text-gray-600 hover:text-rooted">
                <span class="sr-only">Search</span>

                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                    stroke="currentColor" class="h-4 w-4">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
                </svg>
            </button>
        </span>

        <input type="text" id="search-inventory" placeholder="Search by ID, Name, SKU, Tags."
            class="w-96 rounded-md border py-4 ps-12 pl-3 shadow-sm sm:text-base" />
        </div>

    </div>

    {{!-- Returning the results from the search ot the filter --}}
    <div class="results">
        {{#each products}}
        <div class="p-2 border-b border-gray-300" data-category="{{this.category}}" data-price="{{this.price}}">
            <div><strong>{{this.name}}</strong></div>
            <div>{{this.category}}</div>
            <div>Â£{{this.price}}</div>
        </div>
        {{/each}}
    </div>
    
    {{!-- Adding in the JavaScript to carry out the functionality of the Search and Sort
    This to potentially be sorted in the backend? --}}
    <script>
        document.addEventListener("DOMContentLoaded", () => {
        const searchInput = document.querySelector('input[aria-label="Search"]');
        const sortSelect = document.querySelector('select');
        const resultsContainer = document.querySelector('.results');

        searchInput.addEventListener('input', filterResults);
        sortSelect.addEventListener('change', sortResults);

    function filterResults() {
        const searchTerm = searchInput.value.toLowerCase();
        const results = resultsContainer.querySelectorAll('div[data-category]');

        results.forEach(result => {
        const name = result.querySelector('strong').textContent.toLowerCase();
        const category = result.dataset.category.toLowerCase();

        const matchesSearch = name.includes(searchTerm) || category.includes(searchTerm);
        result.style.display = matchesSearch ? 'block' : 'none';
    });
    }

        function sortResults() {
            const sortBy = sortSelect.value;
            const results = Array.from(resultsContainer.querySelectorAll('div[data-category]'));

            results.sort((a, b) => {
            if (sortBy === 'name') {
                return a.querySelector('strong').textContent.localeCompare(b.querySelector('strong').textContent);
            } else if (sortBy === 'category') {
                return a.dataset.category.localeCompare(b.dataset.category);
            } else if (sortBy === 'price') {
                return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
            }
            return 0; // Default case
    });

        
        resultsContainer.innerHTML = '';
        results.forEach(result => resultsContainer.appendChild(result));
    }
    });

    </script>


    <div class="mt-6 flex w-full p-6 mb-4">
        <h3 class="text-xl font-semibold">Recommended for You</h3>
        {{!-- Image/product carousel of 'Recommended for You' products --}}
        <div id="carousel-container">
            
        </div>
        {{!-- Using a random generator functionality to randomly acquire the recommended for you products --}}
    </div>

    <div class="mt-6 flex w-full p-6 mb-4">
        <h3 class="text-xl font-semibold">What's New</h3>
        {{!-- Image/product carousel of the Newest Products --}}
        <div id="carousel-container">
        </div>
    </div>

    <div class="mt-6 flex w-full p-6 mb-4">
        <h3 class="text-xl font-semibold">Top Products</h3>
        {{!-- Image/product carousel of Most Popular Products --}}
        <div id="carousel-container">
        </div>
    </div>








</div>