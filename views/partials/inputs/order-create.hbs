<div>
    <div id="order-create-modal" data-mode="create" class="hidden fixed top-0 left-0 w-screen h-screen bg-black/[.6] z-30">
        <form
            class="fixed top-[50vh] left-[50vw] bg-white w-[90vw] md:w-[80vw] lg:w-[70vw] max-h-[80vh] overflow-auto rounded-md [transform:translate(-50%,-50%);]">
            <div class="flex flex-col gap-6">
                <div class="flex place-items-center justify-between p-6 border-b">
                    <h2 id="modal_title" class="text-2xl">Create Order</h2>
                    <button type="button" id="order-create-close">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" 
                            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                            class="text-black/[.6]">
                            <line x1="19" y1="12" x2="5" y2="12"></line>
                            <polyline points="12 19 5 12 12 5"></polyline>
                        </svg>
                    </button>
                </div>

                <div class="flex flex-col gap-6">
                    <table id="product-table" class="w-full table-auto p-4 gap-4">
                        <thead class="text-white border rounded-md bg-rooted">
                            <tr>
                                <th class="text-left">Product</th>
                                <th class="text-left">Quantity</th>
                                <th class="text-left">Price per item</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="border-t border-b border-gray-400 product-row">
                                <td class="whitespace-nowrap py-2 mt-4">
                                    <div id="product-search-new_0" class="flex border border-gray-200 shadow-sm rounded-md product-search">
                                        <select id="product_search_input_0" class="product-search" name="products" style="width: 100%; padding: 2rem 1rem; font-size: 1rem; border: 1px solid #D1D5DB; border-radius: 0.375rem;">
                                        </select>
                                    </div>
                                </td>
                                <td class="whitespace-nowrap py-2 mt-4">
                                    <input id="product_qty" required type="number" min="1" value="1" step="1" class="w-20 px-2 py-1 border border-gray-200 rounded-md mr-4">
                                </td>
                                <td id="price-per-item" class="whitespace-nowrap py-2 mt-4">
                                    {{currency_symbol}}0.00
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="flex justify-center w-full">
                        <button id="add-row" class="text-gray-600 hover:text-rooted hover:underline">Add Row</button>
                    </div>
                </div>

                <div class="flex flex-col gap-6">
                    <button id="submit_btn" type="submit" class="border-2 rounded-md border-rooted text-rooted-secondary px-4 py-2 bg-rooted hover:bg-rooted-secondary hover:text-rooted hover:border-rooted-secondary">Create</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    const selectPayload = {
        placeholder: 'Search for a product',
        templateSelection: (state) => {
            if ('_resultId' in state) {
                const id = state._resultId.replace('select2-product_search_input_', '').split('-')[0]
                const container = document.getElementById(`select2-product_search_input_${id}-container`)
                const tr = container.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement

                fetch(`/inventory/api/s/${state.id}`)
                    .then(res => res.json())
                    .then((data) => {
                        if (data.code === 200) {
                            tr.querySelector('#price-per-item').textContent = formatCurrency(data.data.product.price, '{{currency_symbol}}')
                        }
                    })
            }
            return state.text
        },
        ajax: {
            url: '/inventory/api/search',
            data: function (params) {
                return {
                    query: params.term
                };
            },
            processResults: function (data) {
                return {
                    results: data.data.products.map((product) => {
                        return {
                            id: product.id,
                            text: `${product.name}`
                        }
                    })
                }
            }
        }
    }

    class CreateOrder {
        constructor() {
            document.addEventListener('DOMContentLoaded', () => {
                this.modal = document.getElementById('order-create-modal');
                this.form = this.modal.querySelector('form');
                this.closeBtn = this.modal.querySelector('#order-create-close');

                this.close = this.close.bind(this);
                this.open = this.open.bind(this);
                this.init = this.init.bind(this);

                this.init();
            })
        }

        close() {
            this.modal.classList.add('hidden');
            this.form.reset();
        }

        open() {
            this.form.reset();
            this.modal.classList.remove('hidden');
        }

        init() {
            this.closeBtn.addEventListener('click', this.close);
            this.modal.addEventListener('click', (e) => {
                if (e.target === this.modal) {
                    this.close();
                }
            })
        }
    }

    const createOrder = new CreateOrder();

    document.addEventListener('DOMContentLoaded', () => {
        $(`#product_search_input_0`).select2(selectPayload)
    })
</script>