<script src="https://cdn.jsdelivr.net/npm/@tinymce/tinymce-webcomponent@2/dist/tinymce-webcomponent.min.js"></script>

<div>
    <button id="inventory-create" class="border-2 bg-white border-invente text-invente hover:bg-invente hover:text-invente-foreground rounded-md p-2">Create Single</button>

    <div id="inventory-create-modal" data-mode="create" class="hidden fixed top-0 left-0 w-screen h-screen bg-black/[.6] z-30">
        <form
            class="fixed top-[50vh] left-[50vw] bg-white w-[90vw] md:w-[80vw] lg:w-[70vw] max-h-[80vh] overflow-auto rounded-md [transform:translate(-50%,-50%);]">
            <div class="flex flex-col gap-6">
                <div class="flex place-items-center justify-between p-6 border-b">
                    <h2 id="modal_title" class="text-2xl">Create Product</h2>
                    <button type="button" id="product-create-close">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" 
                            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                            class="text-black/[.6]">
                            <line x1="19" y1="12" x2="5" y2="12"></line>
                            <polyline points="12 19 5 12 12 5"></polyline>
                        </svg>
                    </button>
                </div>

                <div class="grid grid-cols-3 gap-6 p-6">
                <div class="col-span-1 flex flex-col">
                    <div class="flex flex-col mb-4">
                        <p>Upload Image</p>
                        <div class="flex justify-between mt-4">
                            <div class="flex flex-col max-w-[50%]">
                                <img id="image-preview" src="" alt="">
                            </div>
                            <div class="flex flex-col ml-1 max-w-[50%]">
                                <p class="font-semibold">Image Specification:</p>
                                <p>Size: 1000px x 1000px</p>
                                <p class="mb-6">Format: JPG / PNG 72 dpi</p>
                                <div class="relative inline-block">
                                    <button id="upload-file" type="button" class="flex mb-2 text-invente hover:underline">
                                        <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                            viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                            stroke-linecap="round" stroke-linejoin="round">
                                            <circle cx="12" cy="12" r="10"></circle>
                                            <line x1="12" y1="8" x2="12" y2="16"></line>
                                            <line x1="8" y1="12" x2="16" y2="12"></line>
                                        </svg>
                                        Upload image
                                    </button>
                                    <input type="file" id="image-upload" accept=".jpeg,.jpg,.png" class="hidden" />
                                </div>
                                <button id="clear-image" type="button" class="flex text-gray-600 hover:text-red-600 hover:underline">
                                    <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                        viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                        stroke-linecap="round" stroke-linejoin="round">
                                        <polyline points="3 6 5 6 21 6"></polyline>
                                        <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                        <line x1="10" y1="11" x2="10" y2="17"></line>
                                        <line x1="14" y1="11" x2="14" y2="17"></line>
                                    </svg>
                                    Remove
                                </button>
                            </div>
                        </div>
                    </div>
                    <label for="description">Description</label>
                    <textarea id="description" class="border border-[#6b7280] rounded-md h-[190px] min-h-[100px] p-2" placeholder="Enter here">
                        <h1>This is a description</h1>
                        <p>Description</p>
                    </textarea>
                </div>
                <div class="flex flex-col gap-4">
                    <div class="flex flex-col mb-4">
                        <label for="product-name">Product Name</label>
                        <input type="text" id="product-name" required class="mt-1 w-full rounded-md px-2 py-1 border border-[#6b7280] shadow-sm text-md" placeholder="Enter here">
                    </div>

                    <p>Price and stock</p>

                    <div class="grid grid-cols-2 gap-4 mb-4">
                        <div class="flex flex-col">
                            <label for="product-barcode">Product Price</label>
                            <input type="text" id="product-barcode" required class="mt-1 w-full rounded-md px-2 py-1 border border-[#6b7280] shadow-sm text-md" placeholder="015327">
                        </div>
                        <div class="flex flex-col">
                            <label for="stock">Stock</label>
                            <input id="stock" required type="text" class="mt-1 w-full rounded-md px-2 py-1 border border-[#6b7280] text-black shadow-sm text-md bg-white">
                        </div>
                    </div>
                </div>

                <div class="flex flex-col gap-6">
                    <button id="submit_btn" type="submit" class="border-2 rounded-md border-rooted text-rooted-secondary px-4 py-2 bg-rooted hover:bg-rooted-secondary hover:text-rooted hover:border-rooted-secondary">Create</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    class CreateProduct {
        constructor() {
            document.addEventListener('DOMContentLoaded', () => {
                this.modal = document.getElementById('inventory-create-modal');
                this.form = this.modal.querySelector('form');
                this.openBtn = document.getElementById('inventory-create');
                this.closeBtn = this.form.querySelector('#product-create-close');

                this.modal_title = this.form.querySelector('#modal_title');
                this.submitBtn = this.form.querySelector('#submit_btn');

                this.open = this.open.bind(this);
                this.close = this.close.bind(this);
                this.init = this.init.bind(this);

                this.init();
            })
        }

        close() {
            this.modal.classList.add('hidden');
            this.form.reset();
            this.modal_title.textContent = `Create Product`;
            this.submitBtn.textContent = 'Create'
        }

        open() {
            this.form.reset();
            this.modal.classList.remove('hidden');
        }

        edit(id) {
            this.modal_title.textContent = `Edit Product - #${id}`;
            this.submitBtn.textContent = 'Update'

            fetch(`/inventory/api/s/${id}`)
                .then(res => res.json())
                .then((data) => {
                    if (data.code === 200) {
                        const product = data.data.product;

                        this.form.querySelector('#product-name').value = data.name
                        this.form.querySelector('#description').value = data.description
                        this.form.querySelector('#product-price').value = data.price
                        this.form.querySelector('#product-barcode').value = data.barcode
                        this.form.querySelector('#stock').value = data.stockCount
                        this.form.querySelector('#product-category').value = data.productCategory
                    }
                }).catch((err) => {
                    console.log(err)
                })
        }

        init() {
            this.openBtn.addEventListener('click', this.open);
            this.closeBtn.addEventListener('click', this.close);
            this.modal.addEventListener('click', (e) => {
                if (e.target === this.modal) {
                    this.close();
                }
            })

            tinymce.init({
                selector: 'textarea#description'
            });
        }
    }

    const createProduct = new CreateProduct();

    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('inventory-create-modal').querySelector('form');

        form.querySelector('#upload-file').addEventListener('click', () => {
            form.querySelector('#image-upload').click();
        });

        form.querySelector('#image-upload').addEventListener('change', (e) => {
            const image = event.target.files[0];

            if (image) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    form.querySelector('#image-preview').src = e.target.result
                }

                reader.readAsDataURL(image);
            }
        });

        form.querySelector('#clear-image').addEventListener('click', () => {
            form.querySelector('#image-upload').value = '';
            form.querySelector('#image-preview').src = '';
        });

        form.addEventListener('submit', (e) => {
            e.preventDefault();

            const data = new FormData();

            data.append('name', form.querySelector('#product-name').value);
            data.append('description', form.querySelector('#description').value);
            data.append('price', form.querySelector('#product-price').value);
            data.append('barcode', form.querySelector('#product-barcode').value);
            data.append('stockCount', form.querySelector('#stock').value);
            data.append('productCategory', form.querySelector('#product-category').value);
            data.append('image', form.querySelector('#image-upload').files[0]);

            fetch('/inventory/api', {
                method: 'POST',
                body: JSON.stringify(data),
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => res.json()).then((data) => {
                if (data.code === 200) {
                    notify.success('Product successfully created/updated', 'Success')

                    createProduct.close();
                    inventory.fetchInventory();
                    inventory.fetchInventoryStats();
                }
            }).catch((err) => {
                console.log(err)
            })
        });
    })
</script>